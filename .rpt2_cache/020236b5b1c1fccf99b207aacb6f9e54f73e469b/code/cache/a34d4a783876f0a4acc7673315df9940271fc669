{"map":"{\"version\":3,\"file\":\"HarvestTask.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/tasks/HarvestTask.ts\"],\"names\":[],\"mappings\":\"AAAA,qEAAqE;AACrE,MAAM;IACK,MAAM,CAAC,GAAG,CAAC,KAAY;QAC1B,aAAa;QACb,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,IAAI,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,2BAA2B;QAC3B,IAAI,KAAK,CAAC,aAAa,GAAG,UAAU,EAAE;YAElC,cAAc;YACd,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,EAAE;gBAC/C,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;aAC3B;SAEJ;aAAM;YAEH,SAAS;YACT,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,eAAe,CAAC,IAAI,gBAAgB,EAAE;gBAC5E,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;aACtC;SAEJ;IACL,CAAC;CACJ\"}","code":"// Class that contains creep logic for Harvesting energy from source.\r\nexport class HarvestTask {\r\n    static run(creep) {\r\n        // Task Setup\r\n        let sources = creep.room.find(FIND_SOURCES);\r\n        let cargoTotal = _.sum(creep.carry);\r\n        // If we have room to carry\r\n        if (creep.carryCapacity > cargoTotal) {\r\n            // Mine source\r\n            if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(sources[0]);\r\n            }\r\n        }\r\n        else {\r\n            // Unload\r\n            if (creep.transfer(Game.spawns['Spawn1'], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(Game.spawns['Spawn1']);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=HarvestTask.js.map"}
