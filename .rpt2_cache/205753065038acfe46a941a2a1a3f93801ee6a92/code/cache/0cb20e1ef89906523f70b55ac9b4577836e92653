{"map":"{\"version\":3,\"file\":\"Commander.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Commander.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC,MAAM;IAKK,QAAQ,CAAC,CAAS;QACrB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;SACtC;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,CAAC,CAAA;SACtB;IACL,CAAC;IAEM,QAAQ,CAAC,CAAS;QACrB,QAAO,CAAC,EAAE;YACN,KAAK,KAAK,CAAC,CAAC;gBACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,MAAM;aACR;YACD,KAAK,KAAK,CAAC,CAAC;gBACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACzB,MAAM;aACR;YACD,KAAK,KAAK,CAAC,CAAC;gBACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,MAAM;aACT;YACD,OAAO,CAAC,CAAC;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,MAAM;aACT;SACH;IACN,CAAC;IAEM,MAAM,CAAC,OAAO;QACjB,+BAA+B;QAC/B,+BAA+B;QAE/B,+CAA+C;QAG/C,sCAAsC;QACtC,YAAY,CAAC,QAAQ,EAAE,CAAC;QACxB,YAAY,CAAC,MAAM,EAAE,CAAC;QAEtB,uBAAuB;QACvB,SAAS,CAAC,QAAQ,EAAE,CAAC;QAErB,qBAAqB;IAEzB,CAAC;CACJ\"}","code":"import { CreepFactory } from \"creeps/CreepFactory\";\r\nimport { Delegator } from \"Delegator\";\r\nexport class Commander {\r\n    setAlert(i) {\r\n        if (i > 0 || i > 2) {\r\n            console.log(\"INVALID ALERT LEVEL!\");\r\n        }\r\n        else {\r\n            this.alertLevel = i;\r\n        }\r\n    }\r\n    setIntel(s) {\r\n        switch (s) {\r\n            case \"INF\": {\r\n                this.intelLevel = \"INF\";\r\n                break;\r\n            }\r\n            case \"DEB\": {\r\n                this.intelLevel = \"DEB\";\r\n                break;\r\n            }\r\n            case \"TRC\": {\r\n                this.intelLevel = \"TRC\";\r\n                break;\r\n            }\r\n            default: {\r\n                this.intelLevel = \"INF\";\r\n                console.log(\"INVALID INTEL LEVEL!\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static runTick() {\r\n        // Update / Check Active Creeps\r\n        // CreepFactory.updateStatus();\r\n        // Conduct Rollcall to update Empire Population\r\n        // Create creeps if lacking population\r\n        CreepFactory.rollcall();\r\n        CreepFactory.create();\r\n        // Preform Tick Actions\r\n        Delegator.delegate();\r\n        // Handle task logic.\r\n    }\r\n}\r\n//# sourceMappingURL=Commander.js.map"}
