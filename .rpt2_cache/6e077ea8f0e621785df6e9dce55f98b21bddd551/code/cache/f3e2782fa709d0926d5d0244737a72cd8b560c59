{"map":"{\"version\":3,\"file\":\"CreepFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/creeps/CreepFactory.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { CreepBodies } from \"./CreepBodies\";\r\nimport { EmpireConfig } from \"Empire\";\r\nimport { EmpireStats } from \"Empire\";\r\n// Tick\r\n// 1. RollCall to see what the current roles of living creeps are.\r\n// 2. \r\nexport class CreepFactory {\r\n    static nameCreep(task) {\r\n        let id = Math.floor(1000 + Math.random() * 9000);\r\n        return task + String(id);\r\n    }\r\n    static rollcall() {\r\n        // Reset the count\r\n        EmpireStats.CurrentPopulation.reset();\r\n        // Get new count\r\n        for (const i in Game.creeps) {\r\n            let creep = Game.creeps[i];\r\n            /* TRACE LOGS\r\n                        console.log(creep.name + \" is of role...\");\r\n                        console.log(JSON.stringify(Memory.creeps[creep.name].currTask));\r\n            */\r\n            if (Memory.creeps[creep.name].role == \"HRV\") {\r\n                EmpireStats.CurrentPopulation.HRV += 1;\r\n            }\r\n            else if (Memory.creeps[creep.name].role == \"UPG\") {\r\n                EmpireStats.CurrentPopulation.UPG += 1;\r\n            }\r\n            else if (Memory.creeps[creep.name].role == \"WRK\") {\r\n                EmpireStats.CurrentPopulation.WRK += 1;\r\n            }\r\n            else {\r\n                // error\r\n            }\r\n        }\r\n        // Is our new count, not the same as our current.\r\n        // INFO log\r\n        console.log(\"ROLL CALL RESULTS: \" + JSON.stringify(EmpireStats.CurrentPopulation));\r\n        return;\r\n    }\r\n    static create() {\r\n        // HRV -> UPG -> WRK\r\n        if (Game.spawns['Spawn1'].spawning) {\r\n            console.log(\"Room Spawner is Currently working..\");\r\n            return;\r\n        }\r\n        console.log(\"Creation Check: HRV\");\r\n        if (EmpireStats.CurrentPopulation.HRV < EmpireConfig.PopulationLimits.HRV) {\r\n            if (Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, this.nameCreep(\"HRV\"), { memory: EmpireConfig.HRV_ROLE, dryRun: true }) === 0) {\r\n                Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, this.nameCreep(\"HRV\"), { memory: EmpireConfig.HRV_ROLE });\r\n                console.info(\"HRV creep created!\");\r\n            }\r\n            ;\r\n            return;\r\n        }\r\n        console.log(\"Creation Check: UPG\");\r\n        if (EmpireStats.CurrentPopulation.UPG < EmpireConfig.PopulationLimits.UPG) {\r\n            if (Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, this.nameCreep(\"UPG\"), { memory: EmpireConfig.UPG_ROLE, dryRun: true }) === 0) {\r\n                Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, this.nameCreep(\"UPG\"), { memory: EmpireConfig.UPG_ROLE });\r\n                console.info(\"UPG creep created!\");\r\n            }\r\n            ;\r\n            return;\r\n        }\r\n        ;\r\n        console.log(\"Creation Check: WRK\");\r\n        if (EmpireStats.CurrentPopulation.WRK < EmpireConfig.PopulationLimits.WRK) {\r\n            if (Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, this.nameCreep(\"WRK\"), { memory: EmpireConfig.WRK_ROLE, dryRun: true }) === 0) {\r\n                Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, this.nameCreep(\"WRK\"), { memory: EmpireConfig.WRK_ROLE });\r\n                console.info(\"WRK creep created!\");\r\n            }\r\n            ;\r\n            return;\r\n        }\r\n    }\r\n}\r\nCreepFactory.JobList = [];\r\n//# sourceMappingURL=CreepFactory.js.map"}
