{"map":"{\"version\":3,\"file\":\"CreepFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/creeps/CreepFactory.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAE9C,cAAc;AAGlB,MAAM;IAIK,MAAM,CAAC,QAAQ;QAClB,kBAAkB;QAClB,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAEhC,gBAAgB;QAChB,KAAI,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAExB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,gBAAgB,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAE5D,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE;gBACzC,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;aAEpC;iBAAM,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE;gBAChD,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;aAEpC;iBAAM,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE;gBAChD,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;aAEpC;iBAAM;gBACH,QAAQ;aACX;SACJ;QAED,iDAAiD;QACjD,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,OAAO;IACX,CAAC;IAEM,MAAM,CAAC,MAAM;QAChB,oBAAoB;QACpB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,YAAY,CAAC,UAAU,CAAC,GAAG,GAAG,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACvG,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC7H;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;SACnC;QACD;;;;;;;;;;;;UAYE;IACN,CAAC;;AAtDa,oBAAO,GAAG,EAAE,CAAC\"}","code":"import { CreepBodies } from \"./CreepBodies\";\r\nimport { EmpireConfig } from \"EmpireConfig\";\r\nimport { CreepNameGen } from \"utils/CreepNameGen\";\r\n// MEM Presets\r\nexport class CreepFactory {\r\n    static rollcall() {\r\n        // Reset the count\r\n        EmpireConfig.PopCurrent.reset();\r\n        // Get new count\r\n        for (const i in Game.creeps) {\r\n            let creep = Game.creeps[i];\r\n            console.log(creep.name + \" is of role...\");\r\n            console.log(JSON.stringify(Memory.creeps[creep.name].task));\r\n            if (Memory.creeps[creep.name].task == \"HRV\") {\r\n                EmpireConfig.PopCurrent.HRV += 1;\r\n            }\r\n            else if (Memory.creeps[creep.name].task == \"UPG\") {\r\n                EmpireConfig.PopCurrent.UPG += 1;\r\n            }\r\n            else if (Memory.creeps[creep.name].task == \"WRK\") {\r\n                EmpireConfig.PopCurrent.WRK += 1;\r\n            }\r\n            else {\r\n                // error\r\n            }\r\n        }\r\n        // Is our new count, not the same as our current.\r\n        console.log(\"ROLL CALL RESULTS: \" + JSON.stringify(EmpireConfig.PopCurrent));\r\n        return;\r\n    }\r\n    static create() {\r\n        // HRV -> UPG -> WRK\r\n        console.log(\"HRV Current: \" + EmpireConfig.PopCurrent.HRV + \" | Limit: \" + EmpireConfig.PopLimits.HRV);\r\n        if (EmpireConfig.PopCurrent.HRV < EmpireConfig.PopLimits.HRV) {\r\n            Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, CreepNameGen.nameCreep(\"HRV\"), { memory: EmpireConfig.HRV_ROLE });\r\n        }\r\n        else {\r\n            console.log(\"HRV at Capacity!\");\r\n        }\r\n        /*\r\n        if (EmpireConfig.PopCurrent.UPG < EmpireConfig.PopLimits.UPG) {\r\n            Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, CreepNameGen.nameCreep(\"UPG\"), new HRVRolePreset);\r\n        } else {\r\n            console.log(\"UPG at Capacity!\");\r\n        }\r\n        \r\n        if (EmpireConfig.PopCurrent.WRK < EmpireConfig.PopLimits.WRK) {\r\n            Game.spawns['Spawn1'].spawnCreep(CreepBodies.T1_WORKER, CreepNameGen.nameCreep(\"WRK\"), new HRVRolePreset);\r\n        } else {\r\n            console.log(\"WRK at Capacity!\");\r\n        }\r\n        */\r\n    }\r\n}\r\nCreepFactory.JobList = [];\r\n//# sourceMappingURL=CreepFactory.js.map"}
